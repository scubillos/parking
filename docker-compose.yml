version: '3'

services:
  db:
    container_name: ${APP_NAME}_db
    image: docker.io/mysql:8
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - './db:/var/lib/mysql'
    ports:
      - ${MYSQL_PORT}:3306
    networks:
      net:
        aliases:
          - ${APP_NAME}_db
  api:
    container_name: ${APP_NAME}_api
    build: 
      context: docker-compose/php
      dockerfile: Dockerfile
    image: laravel:8-php81fpm
    ports:
      - 9000:9000
    environment:
      - DB_HOST=${APP_NAME}_db
      - DB_PORT=3306
      - DB_DATABASE=${MYSQL_DATABASE}
      - DB_USERNAME=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - ./${DIR_APP}:/var/www/html
    depends_on:
      - db
    networks:
      net:
        aliases:
          - ${APP_NAME}_api
    working_dir: /var/www/html
  nginx:
    container_name: ${APP_NAME}_nginx
    image: nginx:stable-alpine
    restart: on-failure
    ports:
      - ${HTTP_PORT}:80
    volumes:
      - ./${DIR_APP}:/var/www/html
      - ./docker-compose/nginx/conf.d:/etc/nginx/conf.d/
    depends_on:
      - api
    networks:
      net:
        aliases:
          - ${APP_NAME}_nginx
  app:
    container_name: ${APP_NAME}_app
    build: 
      context: docker-compose/node
      dockerfile: Dockerfile
    image: node:14-vuejsparking
    working_dir: /var/www/html/app/
    ports:
      - 3000:3000
    volumes:
      - ./${DIR_APP}/:/var/www/html/app
    tty: true
    networks:
      net:
        aliases:
          - ${APP_NAME}_app
networks:
  net:
    driver: bridge
